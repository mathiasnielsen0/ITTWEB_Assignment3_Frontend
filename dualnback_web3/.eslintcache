[{"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\index.tsx":"1","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\serviceWorker.ts":"2","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\reportWebVitals.ts":"3","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\App.tsx":"4","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\GamePage.tsx":"5","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\HighscoresPage.tsx":"6","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\BoardComponent.tsx":"7","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\ScoreCard.tsx":"8","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\PublishHighscoreModal.tsx":"9","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\TileComponent.tsx":"10","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\WebSocket\\HighscoreWebSocket.tsx":"11","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Apis\\JwtTokenApi.tsx":"12","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Apis\\HighscoreApi.tsx":"13"},{"size":576,"mtime":1607516114434,"results":"14","hashOfConfig":"15"},{"size":6426,"mtime":1607518004419,"results":"16","hashOfConfig":"15"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1177,"mtime":1607528857187,"results":"18","hashOfConfig":"15"},{"size":3748,"mtime":1607529460648,"results":"19","hashOfConfig":"15"},{"size":2438,"mtime":1607528223500,"results":"20","hashOfConfig":"15"},{"size":4802,"mtime":1607528223498,"results":"21","hashOfConfig":"15"},{"size":1643,"mtime":1607528223499,"results":"22","hashOfConfig":"15"},{"size":2884,"mtime":1607529409280,"results":"23","hashOfConfig":"15"},{"size":982,"mtime":1607510975489,"results":"24","hashOfConfig":"15"},{"size":545,"mtime":1607528223501,"results":"25","hashOfConfig":"15"},{"size":796,"mtime":1607529990053,"results":"26","hashOfConfig":"15"},{"size":936,"mtime":1607530709443,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"f676j9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\index.tsx",[],["59","60"],"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\serviceWorker.ts",["61"],"ï»¿// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            console.log(\"serviceWorker url: \" + swUrl)\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n    else{\r\n        console.log(\"Not in production, service worker ignored\");\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' }\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\reportWebVitals.ts",[],"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\App.tsx",["62","63","64","65","66"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Highscores from \"./Pages/HighscoresPage\"\nimport Game from \"./Pages/GamePage\"\nimport JwtTokenApi from \"./Apis/JwtTokenApi\"\n\nimport { Navbar, Nav, NavItem, NavDropdown, Container } from 'react-bootstrap'\nimport Home from \"./Pages/HomePage\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  JwtTokenApi.getJwtToken();\n  return (\n    <Router>\n    <div className=\"App\">\n\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Dual n Back</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/highscores\">Highscores</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    <div className=\"content-wrapper\">\n      <Container>\n        <Switch>\n          <Route path=\"/highscores\">\n            <Highscores />\n          </Route>\n          <Route path=\"/\">\n            <Game />\n          </Route>\n        </Switch>\n      </Container>\n    </div>\n\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\GamePage.tsx",["67","68","69"],"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\HighscoresPage.tsx",[],"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\BoardComponent.tsx",["70","71","72","73","74","75","76","77","78","79"],"import React from 'react';\r\nimport { getJSDocAugmentsTag } from 'typescript';\r\nimport Tile from \"./TileComponent\"\r\n\r\ninterface IProps {\r\n    startGame: Boolean,\r\n    incementScore: any,\r\n    resetScore: any,\r\n}\r\n\r\ninterface IState {\r\n    currentHighlight: Number[],\r\n    gameStarted: Boolean,\r\n}\r\n\r\nexport default class BoardComponent extends React.Component<IProps, IState> {\r\n    private tileHistory : Number[][];\r\n\r\n    private currentTileHistory: Number[][];\r\n    private tilesAreClickable: Boolean;\r\n\r\n    private userClickedCountInSequence: Number;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentHighlight : [],\r\n            gameStarted : false,           \r\n        }\r\n\r\n        this.tileHistory = [];\r\n        this.currentTileHistory = [];\r\n        this.tilesAreClickable = false;\r\n        this.userClickedCountInSequence = 0;\r\n\r\n        this.tileWasClicked = this.tileWasClicked.bind(this);\r\n        this.addRandomTileToHistory = this.addRandomTileToHistory.bind(this);\r\n        this.runHighlightSequence = this.runHighlightSequence.bind(this);\r\n        this.checkIfCorrectTileClicked = this.checkIfCorrectTileClicked.bind(this);\r\n    };\r\n\r\n    componentWillReceiveProps(props: IProps) {\r\n        if (props.startGame && !this.props.startGame) {\r\n            this.setState({\r\n                gameStarted: true,\r\n            });\r\n            this.addRandomTileToHistory();\r\n            this.currentTileHistory = this.tileHistory;\r\n            this.runHighlightSequence();\r\n        }\r\n        else if (!props.startGame){\r\n            this.setState({\r\n                gameStarted: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    tileWasClicked(row: Number, col : Number){\r\n        if (this.tilesAreClickable){\r\n            if (this.checkIfCorrectTileClicked(row, col)) {\r\n                this.userClickedCountInSequence = +this.userClickedCountInSequence + 1;\r\n                \r\n                if (this.userClickedCountInSequence == this.tileHistory.length){\r\n                    this.addRandomTileToHistory();\r\n                    this.currentTileHistory = this.tileHistory;\r\n                    this.runHighlightSequence();\r\n                    this.props.incementScore();\r\n                    this.userClickedCountInSequence = 0;\r\n                }\r\n            }\r\n            else {\r\n                this.props.resetScore();\r\n                this.tileHistory = [];\r\n                this.currentTileHistory = [];\r\n                this.userClickedCountInSequence = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkIfCorrectTileClicked(row: Number, col : Number) : Boolean {\r\n        let currentTileSpot = this.tileHistory[this.userClickedCountInSequence as number];\r\n        if (currentTileSpot !== undefined && currentTileSpot[0] == row && currentTileSpot[1] == col){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    runHighlightSequence() {\r\n        setTimeout(() => {\r\n            if (this.currentTileHistory.length > 0 ){\r\n                this.setState({\r\n                    currentHighlight : this.currentTileHistory[0]\r\n                });\r\n\r\n                this.currentTileHistory = this.currentTileHistory.slice(1);\r\n                this.runHighlightSequence();\r\n            }\r\n            else\r\n            {\r\n                this.tilesAreClickable = true;\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        currentHighlight : [9,9]\r\n                    });\r\n                }, 1000)\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    addRandomTileToHistory(){\r\n        var rowNo = Math.floor(Math.random() * 3);\r\n        var colNo = Math.floor(Math.random() * 3);\r\n        let newTileHistory = this.tileHistory;\r\n        newTileHistory.push([rowNo, colNo]);\r\n        this.tileHistory = newTileHistory\r\n    }\r\n    \r\n\r\n    render() {\r\n        const rows = [0, 1, 2]\r\n        const rowNo = this.state.currentHighlight[0];\r\n        const colNo = this.state.currentHighlight[1];\r\n\r\n        return(\r\n            <div className=\"board\">\r\n                { rows.map((row, index) => (\r\n                    <div className=\"board-row\" key={\"row\" + row}>\r\n                        <Tile TileClicked={this.tileWasClicked} key={\"row\" + row + \"col\" + 1} Row={row} Col={0} Highlight={(rowNo == row && colNo == 0).valueOf()}/>\r\n                        <Tile TileClicked={this.tileWasClicked} key={\"row\" + row + \"col\" + 2} Row={row} Col={1} Highlight={(rowNo == row && colNo == 1).valueOf()}/>\r\n                        <Tile TileClicked={this.tileWasClicked} key={\"row\" + row + \"col\" + 3} Row={row} Col={2} Highlight={(rowNo == row && colNo == 2).valueOf()}/>\r\n                    </div>\r\n                    )\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\ScoreCard.tsx",["80"],"ï»¿import React, {RefObject} from \"react\";\r\n\r\ninterface IProps {\r\n    username: string,\r\n    score: number,\r\n    index: number,\r\n    date: Date\r\n}\r\n\r\ninterface IState {\r\n    firstMount: boolean\r\n    class: string\r\n}\r\n\r\nexport default class ScoreCard extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            firstMount: true,\r\n            class: \"scale-1\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this.state.firstMount) {\r\n            this.setState({firstMount: false});\r\n            this.setState({class: \"scale-0 h-0\"});\r\n            setTimeout(() => {\r\n                requestAnimationFrame(() => {\r\n                    console.log(\"animating\");\r\n                    this.setState({class: \"scale-1 h-10\"});\r\n                });\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"row animate score pt-3 pb-3 \" + this.state.class}>\r\n                <div className={\"col-2\"}>\r\n                    {this.props.index}\r\n                </div>\r\n                <div className={\"col-4\"}>\r\n                    <p>\r\n                        {this.props.username}\r\n                    </p>\r\n                </div>\r\n                <div className={\"col-4\"}>\r\n                    <p>\r\n                        {this.props.score}\r\n                    </p>\r\n                </div>\r\n                <div className={\"col-2\"}>\r\n                    <p>\r\n                        {this.props.date.toDateString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\PublishHighscoreModal.tsx",[],"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\TileComponent.tsx",[],"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\WebSocket\\HighscoreWebSocket.tsx",[],"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Apis\\JwtTokenApi.tsx",[],"C:\\Users\\mathi\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Apis\\HighscoreApi.tsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":1,"nodeType":"87","messageId":"88","fix":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":8,"column":23,"nodeType":"92","messageId":"93","endLine":8,"endColumn":30},{"ruleId":"90","severity":1,"message":"95","line":8,"column":32,"nodeType":"92","messageId":"93","endLine":8,"endColumn":43},{"ruleId":"90","severity":1,"message":"96","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":12},{"ruleId":"90","severity":1,"message":"97","line":14,"column":3,"nodeType":"92","messageId":"93","endLine":14,"endColumn":7},{"ruleId":"90","severity":1,"message":"98","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":96,"column":25,"nodeType":"101","endLine":96,"endColumn":81},{"ruleId":"99","severity":1,"message":"100","line":105,"column":21,"nodeType":"101","endLine":105,"endColumn":98},{"ruleId":"90","severity":1,"message":"102","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":29},{"ruleId":"103","severity":1,"message":"104","line":64,"column":53,"nodeType":"105","messageId":"88","endLine":64,"endColumn":55},{"ruleId":"103","severity":1,"message":"104","line":83,"column":65,"nodeType":"105","messageId":"88","endLine":83,"endColumn":67},{"ruleId":"103","severity":1,"message":"104","line":83,"column":94,"nodeType":"105","messageId":"88","endLine":83,"endColumn":96},{"ruleId":"103","severity":1,"message":"104","line":130,"column":131,"nodeType":"105","messageId":"88","endLine":130,"endColumn":133},{"ruleId":"103","severity":1,"message":"104","line":130,"column":147,"nodeType":"105","messageId":"88","endLine":130,"endColumn":149},{"ruleId":"103","severity":1,"message":"104","line":131,"column":131,"nodeType":"105","messageId":"88","endLine":131,"endColumn":133},{"ruleId":"103","severity":1,"message":"104","line":131,"column":147,"nodeType":"105","messageId":"88","endLine":131,"endColumn":149},{"ruleId":"103","severity":1,"message":"104","line":132,"column":131,"nodeType":"105","messageId":"88","endLine":132,"endColumn":133},{"ruleId":"103","severity":1,"message":"104","line":132,"column":147,"nodeType":"105","messageId":"88","endLine":132,"endColumn":149},{"ruleId":"85","severity":1,"message":"86","line":1,"column":1,"nodeType":"87","messageId":"88","fix":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"109","text":"110"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'NavDropdown' is defined but never used.","'Home' is defined but never used.","'Link' is defined but never used.","'cursorTo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'getJSDocAugmentsTag' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",{"range":"111","text":"110"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0]]