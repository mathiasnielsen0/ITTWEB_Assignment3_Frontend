[{"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\index.tsx":"1","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\reportWebVitals.ts":"2","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\App.tsx":"3","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\GamePage.tsx":"4","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\HighscoresPage.tsx":"5","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\HomePage.tsx":"6","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\BoardComponent.tsx":"7","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\TileComponent.tsx":"8","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\serviceWorker.ts":"9","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\ScoreCard.tsx":"10","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\PublishHighscoreModal.tsx":"11"},{"size":595,"mtime":1607517497988,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1607508291710,"results":"14","hashOfConfig":"13"},{"size":1151,"mtime":1607527096060,"results":"15","hashOfConfig":"13"},{"size":3210,"mtime":1607527096089,"results":"16","hashOfConfig":"13"},{"size":2235,"mtime":1607518375347,"results":"17","hashOfConfig":"13"},{"size":366,"mtime":1607508291708,"results":"18","hashOfConfig":"13"},{"size":4802,"mtime":1607527096069,"results":"19","hashOfConfig":"13"},{"size":982,"mtime":1607514618403,"results":"20","hashOfConfig":"13"},{"size":6426,"mtime":1607518375356,"results":"21","hashOfConfig":"13"},{"size":1643,"mtime":1607527096078,"results":"22","hashOfConfig":"13"},{"size":2749,"mtime":1607527227800,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fynycl",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\index.tsx",[],"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\reportWebVitals.ts",[],"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\App.tsx",["50","51","52","53","54"],"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\GamePage.tsx",["55","56"],"import React  from \"react\";\r\nimport { cursorTo } from \"readline\";\r\nimport BoardComponent from \"../Components/BoardComponent\"\r\n\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    gameStarted: Boolean,\r\n    currentScore: Number,\r\n    currentHighscore: Number,\r\n}\r\n\r\nexport default class GamePage extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gameStarted : false,\r\n            currentScore : 0,\r\n            currentHighscore : 0,\r\n        }\r\n        \r\n        this.startGame = this.startGame.bind(this);\r\n        this.resetScore = this.resetScore.bind(this);\r\n        this.incrementScore = this.incrementScore.bind(this);\r\n    };\r\n\r\n\r\n    startGame() {\r\n        this.setState({\r\n            gameStarted : true,\r\n        })\r\n    }\r\n\r\n    resetScore() {\r\n        let highScore = this.state.currentHighscore;\r\n        if(this.state.currentHighscore < this.state.currentScore)\r\n            highScore = this.state.currentScore;\r\n        this.setState({\r\n            currentHighscore : highScore,\r\n            currentScore : 0,\r\n            gameStarted : false,\r\n        })\r\n    }\r\n\r\n    incrementScore() {\r\n        let highScore = this.state.currentHighscore;\r\n        if(this.state.currentHighscore < (+this.state.currentScore + 1))\r\n            highScore = +this.state.currentScore + 1;\r\n        this.setState({\r\n            currentScore : +this.state.currentScore + 1,\r\n            currentHighscore : highScore,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"GamePageWrapper\">\r\n                <BoardComponent incementScore={this.incrementScore} resetScore={this.resetScore} startGame={this.state.gameStarted}></BoardComponent>\r\n                <div className=\"game-controls\">\r\n                    {!this.state.gameStarted &&\r\n                        <a onClick={this.startGame} className=\"btn btn-primary\">Start game</a>\r\n                    }\r\n                    <div className=\"game-stats\">\r\n                        {this.state.gameStarted &&\r\n                            <div className=\"mr-2\">Game started</div>\r\n                        }\r\n                        <b className=\"mr-2 ml-5\">Currentscore:</b> {this.state.currentScore}\r\n                        <b className=\"ml-5 mr-2\">Highscore:</b> {this.state.currentHighscore}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n      )\r\n    }\r\n}",["57","58"],"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\HighscoresPage.tsx",[],"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Pages\\HomePage.tsx",[],"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\BoardComponent.tsx",["59","60","61","62","63","64","65","66","67","68"],"import React from 'react';\r\nimport { getJSDocAugmentsTag } from 'typescript';\r\nimport Tile from \"./TileComponent\"\r\n\r\ninterface IProps {\r\n    startGame: Boolean,\r\n    incementScore: any,\r\n    resetScore: any,\r\n}\r\n\r\ninterface IState {\r\n    currentHighlight: Number[],\r\n    gameStarted: Boolean,\r\n}\r\n\r\nexport default class BoardComponent extends React.Component<IProps, IState> {\r\n    private tileHistory : Number[][];\r\n\r\n    private currentTileHistory: Number[][];\r\n    private tilesAreClickable: Boolean;\r\n\r\n    private userClickedCountInSequence: Number;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentHighlight : [],\r\n            gameStarted : false,           \r\n        }\r\n\r\n        this.tileHistory = [];\r\n        this.currentTileHistory = [];\r\n        this.tilesAreClickable = false;\r\n        this.userClickedCountInSequence = 0;\r\n\r\n        this.tileWasClicked = this.tileWasClicked.bind(this);\r\n        this.addRandomTileToHistory = this.addRandomTileToHistory.bind(this);\r\n        this.runHighlightSequence = this.runHighlightSequence.bind(this);\r\n        this.checkIfCorrectTileClicked = this.checkIfCorrectTileClicked.bind(this);\r\n    };\r\n\r\n    componentWillReceiveProps(props: IProps) {\r\n        if (props.startGame && !this.props.startGame) {\r\n            this.setState({\r\n                gameStarted: true,\r\n            });\r\n            this.addRandomTileToHistory();\r\n            this.currentTileHistory = this.tileHistory;\r\n            this.runHighlightSequence();\r\n        }\r\n        else if (!props.startGame){\r\n            this.setState({\r\n                gameStarted: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    tileWasClicked(row: Number, col : Number){\r\n        if (this.tilesAreClickable){\r\n            if (this.checkIfCorrectTileClicked(row, col)) {\r\n                this.userClickedCountInSequence = +this.userClickedCountInSequence + 1;\r\n                \r\n                if (this.userClickedCountInSequence == this.tileHistory.length){\r\n                    this.addRandomTileToHistory();\r\n                    this.currentTileHistory = this.tileHistory;\r\n                    this.runHighlightSequence();\r\n                    this.props.incementScore();\r\n                    this.userClickedCountInSequence = 0;\r\n                }\r\n            }\r\n            else {\r\n                this.props.resetScore();\r\n                this.tileHistory = [];\r\n                this.currentTileHistory = [];\r\n                this.userClickedCountInSequence = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkIfCorrectTileClicked(row: Number, col : Number) : Boolean {\r\n        let currentTileSpot = this.tileHistory[this.userClickedCountInSequence as number];\r\n        if (currentTileSpot !== undefined && currentTileSpot[0] == row && currentTileSpot[1] == col){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    runHighlightSequence() {\r\n        setTimeout(() => {\r\n            if (this.currentTileHistory.length > 0 ){\r\n                this.setState({\r\n                    currentHighlight : this.currentTileHistory[0]\r\n                });\r\n\r\n                this.currentTileHistory = this.currentTileHistory.slice(1);\r\n                this.runHighlightSequence();\r\n            }\r\n            else\r\n            {\r\n                this.tilesAreClickable = true;\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        currentHighlight : [9,9]\r\n                    });\r\n                }, 1000)\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    addRandomTileToHistory(){\r\n        var rowNo = Math.floor(Math.random() * 3);\r\n        var colNo = Math.floor(Math.random() * 3);\r\n        let newTileHistory = this.tileHistory;\r\n        newTileHistory.push([rowNo, colNo]);\r\n        this.tileHistory = newTileHistory\r\n    }\r\n    \r\n\r\n    render() {\r\n        const rows = [0, 1, 2]\r\n        const rowNo = this.state.currentHighlight[0];\r\n        const colNo = this.state.currentHighlight[1];\r\n\r\n        return(\r\n            <div className=\"board\">\r\n                { rows.map((row, index) => (\r\n                    <div className=\"board-row\">\r\n                        <Tile TileClicked={this.tileWasClicked} key={\"row\" + row + \"col\" + 1} Row={row} Col={0} Highlight={(rowNo == row && colNo == 0).valueOf()}></Tile>\r\n                        <Tile TileClicked={this.tileWasClicked} key={\"row\" + row + \"col\" + 2} Row={row} Col={1} Highlight={(rowNo == row && colNo == 1).valueOf()}></Tile>\r\n                        <Tile TileClicked={this.tileWasClicked} key={\"row\" + row + \"col\" + 3} Row={row} Col={2} Highlight={(rowNo == row && colNo == 2).valueOf()}></Tile>\r\n                    </div>\r\n                    )\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\TileComponent.tsx",[],"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\serviceWorker.ts",["69"],"C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\ScoreCard.tsx",["70"],"﻿import React, {RefObject} from \"react\";\r\n\r\ninterface IProps {\r\n    username: string,\r\n    score: number,\r\n    index: number,\r\n    date: Date\r\n}\r\n\r\ninterface IState {\r\n    firstMount: boolean\r\n    class: string\r\n}\r\n\r\nexport default class ScoreCard extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            firstMount: true,\r\n            class: \"scale-1\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this.state.firstMount) {\r\n            this.setState({firstMount: false});\r\n            this.setState({class: \"scale-0 h-0\"});\r\n            setTimeout(() => {\r\n                requestAnimationFrame(() => {\r\n                    console.log(\"animating\");\r\n                    this.setState({class: \"scale-1 h-10\"});\r\n                });\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"row animate score pt-3 pb-3 \" + this.state.class}>\r\n                <div className={\"col-2\"}>\r\n                    {this.props.index}\r\n                </div>\r\n                <div className={\"col-4\"}>\r\n                    <p>\r\n                        {this.props.username}\r\n                    </p>\r\n                </div>\r\n                <div className={\"col-4\"}>\r\n                    <p>\r\n                        {this.props.score}\r\n                    </p>\r\n                </div>\r\n                <div className={\"col-2\"}>\r\n                    <p>\r\n                        {this.props.date.toDateString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Jonathan\\source\\repos\\ITTWEB_Assignment3\\dualnback_web3\\src\\Components\\PublishHighscoreModal.tsx",[],{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":12},{"ruleId":"71","severity":1,"message":"75","line":7,"column":23,"nodeType":"73","messageId":"74","endLine":7,"endColumn":30},{"ruleId":"71","severity":1,"message":"76","line":7,"column":32,"nodeType":"73","messageId":"74","endLine":7,"endColumn":43},{"ruleId":"71","severity":1,"message":"77","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":12},{"ruleId":"71","severity":1,"message":"78","line":13,"column":3,"nodeType":"73","messageId":"74","endLine":13,"endColumn":7},{"ruleId":"71","severity":1,"message":"79","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":59,"column":25,"nodeType":"82","endLine":59,"endColumn":81},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"71","severity":1,"message":"87","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":65,"column":53,"nodeType":"90","messageId":"91","endLine":65,"endColumn":55},{"ruleId":"88","severity":1,"message":"89","line":86,"column":65,"nodeType":"90","messageId":"91","endLine":86,"endColumn":67},{"ruleId":"88","severity":1,"message":"89","line":86,"column":94,"nodeType":"90","messageId":"91","endLine":86,"endColumn":96},{"ruleId":"88","severity":1,"message":"89","line":137,"column":131,"nodeType":"90","messageId":"91","endLine":137,"endColumn":133},{"ruleId":"88","severity":1,"message":"89","line":137,"column":147,"nodeType":"90","messageId":"91","endLine":137,"endColumn":149},{"ruleId":"88","severity":1,"message":"89","line":138,"column":131,"nodeType":"90","messageId":"91","endLine":138,"endColumn":133},{"ruleId":"88","severity":1,"message":"89","line":138,"column":147,"nodeType":"90","messageId":"91","endLine":138,"endColumn":149},{"ruleId":"88","severity":1,"message":"89","line":139,"column":131,"nodeType":"90","messageId":"91","endLine":139,"endColumn":133},{"ruleId":"88","severity":1,"message":"89","line":139,"column":147,"nodeType":"90","messageId":"91","endLine":139,"endColumn":149},{"ruleId":"92","severity":1,"message":"93","line":1,"column":1,"nodeType":"94","messageId":"91","fix":"95"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":1,"nodeType":"94","messageId":"91","fix":"96"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'NavDropdown' is defined but never used.","'Home' is defined but never used.","'Link' is defined but never used.","'cursorTo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'getJSDocAugmentsTag' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"99","text":"100"},{"range":"101","text":"100"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0]]